//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Ebada.Scgl.Sbgl {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSandroid")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSandroid : global::System.Data.DataSet {
        
        private ps_xlDataTable tableps_xl;
        
        private ps_gtDataTable tableps_gt;
        
        private ps_gtsbzlDataTable tableps_gtsbzl;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSandroid() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSandroid(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ps_xl"] != null)) {
                    base.Tables.Add(new ps_xlDataTable(ds.Tables["ps_xl"]));
                }
                if ((ds.Tables["ps_gt"] != null)) {
                    base.Tables.Add(new ps_gtDataTable(ds.Tables["ps_gt"]));
                }
                if ((ds.Tables["ps_gtsbzl"] != null)) {
                    base.Tables.Add(new ps_gtsbzlDataTable(ds.Tables["ps_gtsbzl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ps_xlDataTable ps_xl {
            get {
                return this.tableps_xl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ps_gtDataTable ps_gt {
            get {
                return this.tableps_gt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ps_gtsbzlDataTable ps_gtsbzl {
            get {
                return this.tableps_gtsbzl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSandroid cln = ((DSandroid)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ps_xl"] != null)) {
                    base.Tables.Add(new ps_xlDataTable(ds.Tables["ps_xl"]));
                }
                if ((ds.Tables["ps_gt"] != null)) {
                    base.Tables.Add(new ps_gtDataTable(ds.Tables["ps_gt"]));
                }
                if ((ds.Tables["ps_gtsbzl"] != null)) {
                    base.Tables.Add(new ps_gtsbzlDataTable(ds.Tables["ps_gtsbzl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableps_xl = ((ps_xlDataTable)(base.Tables["ps_xl"]));
            if ((initTable == true)) {
                if ((this.tableps_xl != null)) {
                    this.tableps_xl.InitVars();
                }
            }
            this.tableps_gt = ((ps_gtDataTable)(base.Tables["ps_gt"]));
            if ((initTable == true)) {
                if ((this.tableps_gt != null)) {
                    this.tableps_gt.InitVars();
                }
            }
            this.tableps_gtsbzl = ((ps_gtsbzlDataTable)(base.Tables["ps_gtsbzl"]));
            if ((initTable == true)) {
                if ((this.tableps_gtsbzl != null)) {
                    this.tableps_gtsbzl.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSandroid";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSandroid.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableps_xl = new ps_xlDataTable();
            base.Tables.Add(this.tableps_xl);
            this.tableps_gt = new ps_gtDataTable();
            base.Tables.Add(this.tableps_gt);
            this.tableps_gtsbzl = new ps_gtsbzlDataTable();
            base.Tables.Add(this.tableps_gtsbzl);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeps_xl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeps_gt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeps_gtsbzl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSandroid ds = new DSandroid();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ps_xlRowChangeEventHandler(object sender, ps_xlRowChangeEvent e);
        
        public delegate void ps_gtRowChangeEventHandler(object sender, ps_gtRowChangeEvent e);
        
        public delegate void ps_gtsbzlRowChangeEventHandler(object sender, ps_gtsbzlRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ps_xlDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLineID;
            
            private global::System.Data.DataColumn columnParentID;
            
            private global::System.Data.DataColumn columnLineCode;
            
            private global::System.Data.DataColumn columnLineName;
            
            private global::System.Data.DataColumn columnLineVol;
            
            private global::System.Data.DataColumn columnOrgCode;
            
            private global::System.Data.DataColumn columnContractor;
            
            private global::System.Data.DataColumn columnWireType;
            
            private global::System.Data.DataColumn columnWireLength;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_xlDataTable() {
                this.TableName = "ps_xl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ps_xlDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ps_xlDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineIDColumn {
                get {
                    return this.columnLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentIDColumn {
                get {
                    return this.columnParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineCodeColumn {
                get {
                    return this.columnLineCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineNameColumn {
                get {
                    return this.columnLineName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineVolColumn {
                get {
                    return this.columnLineVol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrgCodeColumn {
                get {
                    return this.columnOrgCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractorColumn {
                get {
                    return this.columnContractor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WireTypeColumn {
                get {
                    return this.columnWireType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WireLengthColumn {
                get {
                    return this.columnWireLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_xlRow this[int index] {
                get {
                    return ((ps_xlRow)(this.Rows[index]));
                }
            }
            
            public event ps_xlRowChangeEventHandler ps_xlRowChanging;
            
            public event ps_xlRowChangeEventHandler ps_xlRowChanged;
            
            public event ps_xlRowChangeEventHandler ps_xlRowDeleting;
            
            public event ps_xlRowChangeEventHandler ps_xlRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addps_xlRow(ps_xlRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_xlRow Addps_xlRow(string LineID, string ParentID, string LineCode, string LineName, string LineVol, string OrgCode, string Contractor, string WireType, string WireLength) {
                ps_xlRow rowps_xlRow = ((ps_xlRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LineID,
                        ParentID,
                        LineCode,
                        LineName,
                        LineVol,
                        OrgCode,
                        Contractor,
                        WireType,
                        WireLength};
                rowps_xlRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowps_xlRow);
                return rowps_xlRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_xlRow FindByLineID(string LineID) {
                return ((ps_xlRow)(this.Rows.Find(new object[] {
                            LineID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ps_xlDataTable cln = ((ps_xlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ps_xlDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLineID = base.Columns["LineID"];
                this.columnParentID = base.Columns["ParentID"];
                this.columnLineCode = base.Columns["LineCode"];
                this.columnLineName = base.Columns["LineName"];
                this.columnLineVol = base.Columns["LineVol"];
                this.columnOrgCode = base.Columns["OrgCode"];
                this.columnContractor = base.Columns["Contractor"];
                this.columnWireType = base.Columns["WireType"];
                this.columnWireLength = base.Columns["WireLength"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLineID = new global::System.Data.DataColumn("LineID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineID);
                this.columnParentID = new global::System.Data.DataColumn("ParentID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentID);
                this.columnLineCode = new global::System.Data.DataColumn("LineCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineCode);
                this.columnLineName = new global::System.Data.DataColumn("LineName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineName);
                this.columnLineVol = new global::System.Data.DataColumn("LineVol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineVol);
                this.columnOrgCode = new global::System.Data.DataColumn("OrgCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgCode);
                this.columnContractor = new global::System.Data.DataColumn("Contractor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractor);
                this.columnWireType = new global::System.Data.DataColumn("WireType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWireType);
                this.columnWireLength = new global::System.Data.DataColumn("WireLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWireLength);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("ps_xlKey1", new global::System.Data.DataColumn[] {
                                this.columnLineID}, true));
                this.columnLineID.AllowDBNull = false;
                this.columnLineID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_xlRow Newps_xlRow() {
                return ((ps_xlRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ps_xlRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ps_xlRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ps_xlRowChanged != null)) {
                    this.ps_xlRowChanged(this, new ps_xlRowChangeEvent(((ps_xlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ps_xlRowChanging != null)) {
                    this.ps_xlRowChanging(this, new ps_xlRowChangeEvent(((ps_xlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ps_xlRowDeleted != null)) {
                    this.ps_xlRowDeleted(this, new ps_xlRowChangeEvent(((ps_xlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ps_xlRowDeleting != null)) {
                    this.ps_xlRowDeleting(this, new ps_xlRowChangeEvent(((ps_xlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeps_xlRow(ps_xlRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSandroid ds = new DSandroid();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ps_xlDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ps_gtDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columngtID;
            
            private global::System.Data.DataColumn columngtCode;
            
            private global::System.Data.DataColumn columnLineCode;
            
            private global::System.Data.DataColumn columngth;
            
            private global::System.Data.DataColumn columngtType;
            
            private global::System.Data.DataColumn columngtModle;
            
            private global::System.Data.DataColumn columngtHeight;
            
            private global::System.Data.DataColumn columngtLon;
            
            private global::System.Data.DataColumn columngtLat;
            
            private global::System.Data.DataColumn columngtElev;
            
            private global::System.Data.DataColumn columngtSpan;
            
            private global::System.Data.DataColumn columnjsonData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtDataTable() {
                this.TableName = "ps_gt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ps_gtDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ps_gtDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtIDColumn {
                get {
                    return this.columngtID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtCodeColumn {
                get {
                    return this.columngtCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineCodeColumn {
                get {
                    return this.columnLineCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gthColumn {
                get {
                    return this.columngth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtTypeColumn {
                get {
                    return this.columngtType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtModleColumn {
                get {
                    return this.columngtModle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtHeightColumn {
                get {
                    return this.columngtHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtLonColumn {
                get {
                    return this.columngtLon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtLatColumn {
                get {
                    return this.columngtLat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtElevColumn {
                get {
                    return this.columngtElev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gtSpanColumn {
                get {
                    return this.columngtSpan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jsonDataColumn {
                get {
                    return this.columnjsonData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtRow this[int index] {
                get {
                    return ((ps_gtRow)(this.Rows[index]));
                }
            }
            
            public event ps_gtRowChangeEventHandler ps_gtRowChanging;
            
            public event ps_gtRowChangeEventHandler ps_gtRowChanged;
            
            public event ps_gtRowChangeEventHandler ps_gtRowDeleting;
            
            public event ps_gtRowChangeEventHandler ps_gtRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addps_gtRow(ps_gtRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtRow Addps_gtRow(string gtID, string gtCode, string LineCode, string gth, string gtType, string gtModle, string gtHeight, string gtLon, string gtLat, string gtElev, string gtSpan, string jsonData) {
                ps_gtRow rowps_gtRow = ((ps_gtRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        gtID,
                        gtCode,
                        LineCode,
                        gth,
                        gtType,
                        gtModle,
                        gtHeight,
                        gtLon,
                        gtLat,
                        gtElev,
                        gtSpan,
                        jsonData};
                rowps_gtRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowps_gtRow);
                return rowps_gtRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtRow FindBygtID(string gtID) {
                return ((ps_gtRow)(this.Rows.Find(new object[] {
                            gtID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ps_gtDataTable cln = ((ps_gtDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ps_gtDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columngtID = base.Columns["gtID"];
                this.columngtCode = base.Columns["gtCode"];
                this.columnLineCode = base.Columns["LineCode"];
                this.columngth = base.Columns["gth"];
                this.columngtType = base.Columns["gtType"];
                this.columngtModle = base.Columns["gtModle"];
                this.columngtHeight = base.Columns["gtHeight"];
                this.columngtLon = base.Columns["gtLon"];
                this.columngtLat = base.Columns["gtLat"];
                this.columngtElev = base.Columns["gtElev"];
                this.columngtSpan = base.Columns["gtSpan"];
                this.columnjsonData = base.Columns["jsonData"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columngtID = new global::System.Data.DataColumn("gtID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtID);
                this.columngtCode = new global::System.Data.DataColumn("gtCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtCode);
                this.columnLineCode = new global::System.Data.DataColumn("LineCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineCode);
                this.columngth = new global::System.Data.DataColumn("gth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngth);
                this.columngtType = new global::System.Data.DataColumn("gtType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtType);
                this.columngtModle = new global::System.Data.DataColumn("gtModle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtModle);
                this.columngtHeight = new global::System.Data.DataColumn("gtHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtHeight);
                this.columngtLon = new global::System.Data.DataColumn("gtLon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtLon);
                this.columngtLat = new global::System.Data.DataColumn("gtLat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtLat);
                this.columngtElev = new global::System.Data.DataColumn("gtElev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtElev);
                this.columngtSpan = new global::System.Data.DataColumn("gtSpan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngtSpan);
                this.columnjsonData = new global::System.Data.DataColumn("jsonData", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjsonData);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("ps_xlKey1", new global::System.Data.DataColumn[] {
                                this.columngtID}, true));
                this.columngtID.AllowDBNull = false;
                this.columngtID.Unique = true;
                this.columngtID.Caption = "LineID";
                this.columngtCode.Caption = "ParentID";
                this.columngth.Caption = "LineName";
                this.columngtType.Caption = "LineVol";
                this.columngtModle.Caption = "OrgCode";
                this.columngtHeight.Caption = "Contractor";
                this.columngtLon.Caption = "WireType";
                this.columngtLat.Caption = "WireLength";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtRow Newps_gtRow() {
                return ((ps_gtRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ps_gtRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ps_gtRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ps_gtRowChanged != null)) {
                    this.ps_gtRowChanged(this, new ps_gtRowChangeEvent(((ps_gtRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ps_gtRowChanging != null)) {
                    this.ps_gtRowChanging(this, new ps_gtRowChangeEvent(((ps_gtRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ps_gtRowDeleted != null)) {
                    this.ps_gtRowDeleted(this, new ps_gtRowChangeEvent(((ps_gtRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ps_gtRowDeleting != null)) {
                    this.ps_gtRowDeleting(this, new ps_gtRowChangeEvent(((ps_gtRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeps_gtRow(ps_gtRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSandroid ds = new DSandroid();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ps_gtDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ps_gtsbzlDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnbh;
            
            private global::System.Data.DataColumn columnmc;
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnparentid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtsbzlDataTable() {
                this.TableName = "ps_gtsbzl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ps_gtsbzlDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ps_gtsbzlDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bhColumn {
                get {
                    return this.columnbh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mcColumn {
                get {
                    return this.columnmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parentidColumn {
                get {
                    return this.columnparentid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtsbzlRow this[int index] {
                get {
                    return ((ps_gtsbzlRow)(this.Rows[index]));
                }
            }
            
            public event ps_gtsbzlRowChangeEventHandler ps_gtsbzlRowChanging;
            
            public event ps_gtsbzlRowChangeEventHandler ps_gtsbzlRowChanged;
            
            public event ps_gtsbzlRowChangeEventHandler ps_gtsbzlRowDeleting;
            
            public event ps_gtsbzlRowChangeEventHandler ps_gtsbzlRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addps_gtsbzlRow(ps_gtsbzlRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtsbzlRow Addps_gtsbzlRow(string id, string bh, string mc, string xh, string parentid) {
                ps_gtsbzlRow rowps_gtsbzlRow = ((ps_gtsbzlRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        bh,
                        mc,
                        xh,
                        parentid};
                rowps_gtsbzlRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowps_gtsbzlRow);
                return rowps_gtsbzlRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtsbzlRow FindByid(string id) {
                return ((ps_gtsbzlRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ps_gtsbzlDataTable cln = ((ps_gtsbzlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ps_gtsbzlDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnbh = base.Columns["bh"];
                this.columnmc = base.Columns["mc"];
                this.columnxh = base.Columns["xh"];
                this.columnparentid = base.Columns["parentid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnbh = new global::System.Data.DataColumn("bh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbh);
                this.columnmc = new global::System.Data.DataColumn("mc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmc);
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnparentid = new global::System.Data.DataColumn("parentid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparentid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("ps_xlKey1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnid.Caption = "LineID";
                this.columnbh.Caption = "ParentID";
                this.columnmc.Caption = "LineCode";
                this.columnxh.Caption = "LineName";
                this.columnparentid.Caption = "LineVol";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtsbzlRow Newps_gtsbzlRow() {
                return ((ps_gtsbzlRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ps_gtsbzlRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ps_gtsbzlRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ps_gtsbzlRowChanged != null)) {
                    this.ps_gtsbzlRowChanged(this, new ps_gtsbzlRowChangeEvent(((ps_gtsbzlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ps_gtsbzlRowChanging != null)) {
                    this.ps_gtsbzlRowChanging(this, new ps_gtsbzlRowChangeEvent(((ps_gtsbzlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ps_gtsbzlRowDeleted != null)) {
                    this.ps_gtsbzlRowDeleted(this, new ps_gtsbzlRowChangeEvent(((ps_gtsbzlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ps_gtsbzlRowDeleting != null)) {
                    this.ps_gtsbzlRowDeleting(this, new ps_gtsbzlRowChangeEvent(((ps_gtsbzlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeps_gtsbzlRow(ps_gtsbzlRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSandroid ds = new DSandroid();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ps_gtsbzlDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ps_xlRow : global::System.Data.DataRow {
            
            private ps_xlDataTable tableps_xl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ps_xlRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableps_xl = ((ps_xlDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineID {
                get {
                    return ((string)(this[this.tableps_xl.LineIDColumn]));
                }
                set {
                    this[this.tableps_xl.LineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentID {
                get {
                    try {
                        return ((string)(this[this.tableps_xl.ParentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_xl”中列“ParentID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_xl.ParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineCode {
                get {
                    try {
                        return ((string)(this[this.tableps_xl.LineCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_xl”中列“LineCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_xl.LineCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineName {
                get {
                    try {
                        return ((string)(this[this.tableps_xl.LineNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_xl”中列“LineName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_xl.LineNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineVol {
                get {
                    try {
                        return ((string)(this[this.tableps_xl.LineVolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_xl”中列“LineVol”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_xl.LineVolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrgCode {
                get {
                    try {
                        return ((string)(this[this.tableps_xl.OrgCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_xl”中列“OrgCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_xl.OrgCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contractor {
                get {
                    try {
                        return ((string)(this[this.tableps_xl.ContractorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_xl”中列“Contractor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_xl.ContractorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WireType {
                get {
                    try {
                        return ((string)(this[this.tableps_xl.WireTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_xl”中列“WireType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_xl.WireTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WireLength {
                get {
                    try {
                        return ((string)(this[this.tableps_xl.WireLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_xl”中列“WireLength”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_xl.WireLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentIDNull() {
                return this.IsNull(this.tableps_xl.ParentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentIDNull() {
                this[this.tableps_xl.ParentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineCodeNull() {
                return this.IsNull(this.tableps_xl.LineCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineCodeNull() {
                this[this.tableps_xl.LineCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineNameNull() {
                return this.IsNull(this.tableps_xl.LineNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineNameNull() {
                this[this.tableps_xl.LineNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineVolNull() {
                return this.IsNull(this.tableps_xl.LineVolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineVolNull() {
                this[this.tableps_xl.LineVolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrgCodeNull() {
                return this.IsNull(this.tableps_xl.OrgCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrgCodeNull() {
                this[this.tableps_xl.OrgCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractorNull() {
                return this.IsNull(this.tableps_xl.ContractorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractorNull() {
                this[this.tableps_xl.ContractorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWireTypeNull() {
                return this.IsNull(this.tableps_xl.WireTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWireTypeNull() {
                this[this.tableps_xl.WireTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWireLengthNull() {
                return this.IsNull(this.tableps_xl.WireLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWireLengthNull() {
                this[this.tableps_xl.WireLengthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ps_gtRow : global::System.Data.DataRow {
            
            private ps_gtDataTable tableps_gt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ps_gtRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableps_gt = ((ps_gtDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtID {
                get {
                    return ((string)(this[this.tableps_gt.gtIDColumn]));
                }
                set {
                    this[this.tableps_gt.gtIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtCode {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gtCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gtCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gtCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineCode {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.LineCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“LineCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.LineCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gth {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gth”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtType {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gtTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gtType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gtTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtModle {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gtModleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gtModle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gtModleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtHeight {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gtHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gtHeight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gtHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtLon {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gtLonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gtLon”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gtLonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtLat {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gtLatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gtLat”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gtLatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtElev {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gtElevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gtElev”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gtElevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gtSpan {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.gtSpanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“gtSpan”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.gtSpanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jsonData {
                get {
                    try {
                        return ((string)(this[this.tableps_gt.jsonDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gt”中列“jsonData”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gt.jsonDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgtCodeNull() {
                return this.IsNull(this.tableps_gt.gtCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgtCodeNull() {
                this[this.tableps_gt.gtCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineCodeNull() {
                return this.IsNull(this.tableps_gt.LineCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineCodeNull() {
                this[this.tableps_gt.LineCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgthNull() {
                return this.IsNull(this.tableps_gt.gthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgthNull() {
                this[this.tableps_gt.gthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgtTypeNull() {
                return this.IsNull(this.tableps_gt.gtTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgtTypeNull() {
                this[this.tableps_gt.gtTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgtModleNull() {
                return this.IsNull(this.tableps_gt.gtModleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgtModleNull() {
                this[this.tableps_gt.gtModleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgtHeightNull() {
                return this.IsNull(this.tableps_gt.gtHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgtHeightNull() {
                this[this.tableps_gt.gtHeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgtLonNull() {
                return this.IsNull(this.tableps_gt.gtLonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgtLonNull() {
                this[this.tableps_gt.gtLonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgtLatNull() {
                return this.IsNull(this.tableps_gt.gtLatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgtLatNull() {
                this[this.tableps_gt.gtLatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgtElevNull() {
                return this.IsNull(this.tableps_gt.gtElevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgtElevNull() {
                this[this.tableps_gt.gtElevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgtSpanNull() {
                return this.IsNull(this.tableps_gt.gtSpanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgtSpanNull() {
                this[this.tableps_gt.gtSpanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjsonDataNull() {
                return this.IsNull(this.tableps_gt.jsonDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjsonDataNull() {
                this[this.tableps_gt.jsonDataColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ps_gtsbzlRow : global::System.Data.DataRow {
            
            private ps_gtsbzlDataTable tableps_gtsbzl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ps_gtsbzlRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableps_gtsbzl = ((ps_gtsbzlDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableps_gtsbzl.idColumn]));
                }
                set {
                    this[this.tableps_gtsbzl.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bh {
                get {
                    try {
                        return ((string)(this[this.tableps_gtsbzl.bhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gtsbzl”中列“bh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gtsbzl.bhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mc {
                get {
                    try {
                        return ((string)(this[this.tableps_gtsbzl.mcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gtsbzl”中列“mc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gtsbzl.mcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xh {
                get {
                    try {
                        return ((string)(this[this.tableps_gtsbzl.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gtsbzl”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gtsbzl.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parentid {
                get {
                    try {
                        return ((string)(this[this.tableps_gtsbzl.parentidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ps_gtsbzl”中列“parentid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableps_gtsbzl.parentidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbhNull() {
                return this.IsNull(this.tableps_gtsbzl.bhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbhNull() {
                this[this.tableps_gtsbzl.bhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmcNull() {
                return this.IsNull(this.tableps_gtsbzl.mcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmcNull() {
                this[this.tableps_gtsbzl.mcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.tableps_gtsbzl.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.tableps_gtsbzl.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsparentidNull() {
                return this.IsNull(this.tableps_gtsbzl.parentidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetparentidNull() {
                this[this.tableps_gtsbzl.parentidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ps_xlRowChangeEvent : global::System.EventArgs {
            
            private ps_xlRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_xlRowChangeEvent(ps_xlRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_xlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ps_gtRowChangeEvent : global::System.EventArgs {
            
            private ps_gtRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtRowChangeEvent(ps_gtRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ps_gtsbzlRowChangeEvent : global::System.EventArgs {
            
            private ps_gtsbzlRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtsbzlRowChangeEvent(ps_gtsbzlRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ps_gtsbzlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591