<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PS_AccreditUser" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
  <typeAlias alias="PS_AccreditUser"  type="Ebada.Scgl.Model.PS_AccreditUser,Ebada.Scgl.Model" />
  </alias>
  <resultMaps>
      <resultMap id="PS_AccreditUser_AllColumns" class="PS_AccreditUser">
        <result property="AUserId" column="AUserId" />
        <result property="AccreditFromUserId" column="AccreditFromUserId" />
        <result property="AccreditToUserId" column="AccreditToUserId" />
        <result property="AccreditDateTime" column="AccreditDateTime" />
        <result property="AccreditStatus" column="AccreditStatus" />
        <result property="AcWorkflowId" column="AcWorkflowId" />
        <result property="AcWorktaskId" column="AcWorktaskId" />
      </resultMap>
  </resultMaps>

  <statements>
   <select id="SelectPS_AccreditUserList" resultMap="PS_AccreditUser_AllColumns" parameterClass="string">
        SELECT 
         [AUserId],
         [AccreditFromUserId],
         [AccreditToUserId],
         [AccreditDateTime],
         [AccreditStatus],
         [AcWorkflowId],
         [AcWorktaskId]
          FROM PS_AccreditUser
          $value$
   </select>
   
   <select id="SelectPS_AccreditUserByHash" parameterClass="Hashtable">
         SELECT 
         [AUserId],
         [AccreditFromUserId],
         [AccreditToUserId],
         [AccreditDateTime],
         [AccreditStatus],
         [AcWorkflowId],
         [AcWorktaskId]
          FROM PS_AccreditUser
     <dynamic prepend="WHERE">
       <isNotNull prepend="AND" property="AUserId">[AUserId]='$AUserId$'</isNotNull>
       <isNotNull prepend="AND" property="AccreditFromUserId">[AccreditFromUserId]='$AccreditFromUserId$'</isNotNull>
       <isNotNull prepend="AND" property="AccreditToUserId">[AccreditToUserId]='$AccreditToUserId$'</isNotNull>
       <isNotNull prepend="AND" property="AccreditDateTime">[AccreditDateTime]='$AccreditDateTime$'</isNotNull>
       <isNotNull prepend="AND" property="AccreditStatus">[AccreditStatus]='$AccreditStatus$'</isNotNull>
       <isNotNull prepend="AND" property="AcWorkflowId">[AcWorkflowId]='$AcWorkflowId$'</isNotNull>
       <isNotNull prepend="AND" property="AcWorktaskId">[AcWorktaskId]='$AcWorktaskId$'</isNotNull>
     </dynamic>
   </select>
   <select id="SelectPS_AccreditUserByKey" resultMap="PS_AccreditUser_AllColumns" parameterClass="PS_AccreditUser">
         SELECT 
         [AUserId],
         [AccreditFromUserId],
         [AccreditToUserId],
         [AccreditDateTime],
         [AccreditStatus],
         [AcWorkflowId],
         [AcWorktaskId]
         FROM PS_AccreditUser
         WHERE 
           AUserId = #AUserId#

   </select>
 
   <delete id="DeletePS_AccreditUser" parameterClass="PS_AccreditUser">
        DELETE FROM 
         PS_AccreditUser
           WHERE
         AUserId = #AUserId#

   </delete>
   
   <delete id="DeletePS_AccreditUserByWhere" parameterClass="string">
     delete from PS_AccreditUser $value$
   </delete>
   
   <delete id="DeletePS_AccreditUserByKey" parameterClass="string">
        DELETE FROM 
         PS_AccreditUser
           WHERE
         AUserId = #AUserId#
    
   </delete>
   
   <update id="UpdatePS_AccreditUser" parameterClass="PS_AccreditUser" resultClass="int">
          UPDATE PS_AccreditUser
           SET
             [AccreditFromUserId]=#AccreditFromUserId#,
             [AccreditToUserId]=#AccreditToUserId#,
             [AccreditDateTime]=#AccreditDateTime#,
             [AccreditStatus]=#AccreditStatus#,
             [AcWorkflowId]=#AcWorkflowId#,
             [AcWorktaskId]=#AcWorktaskId#
            WHERE 
              AUserId = #AUserId#

   </update>
    <update id="UpdatePS_AccreditUserAccreditStatusByAUserId" parameterClass="PS_AccreditUser" resultClass="int">
      UPDATE PS_AccreditUser
      SET
      [AccreditStatus]=#AccreditStatus#
      
      WHERE
      AUserId =$value$

    </update>

    <insert id="InsertPS_AccreditUser" parameterClass="PS_AccreditUser">
        INSERT INTO PS_AccreditUser
         (
         [AUserId],
         [AccreditFromUserId],
         [AccreditToUserId],
         [AccreditDateTime],
         [AccreditStatus],
         [AcWorkflowId],
         [AcWorktaskId]
         )
       VALUES
         (
         #AUserId#,
         #AccreditFromUserId#,
         #AccreditToUserId#,
         #AccreditDateTime#,
         #AccreditStatus#,
         #AcWorkflowId#,
         #AcWorktaskId#
         )

   </insert>
   
   <select id="GetPS_AccreditUserRowCountByHash" parameterClass="Hashtable">
         SELECT Count(*) 
          FROM PS_AccreditUser
     <dynamic prepend="WHERE">
       <isNotNull prepend="AND" property="AUserId">[AUserId]='$AUserId$'</isNotNull>
       <isNotNull prepend="AND" property="AccreditFromUserId">[AccreditFromUserId]='$AccreditFromUserId$'</isNotNull>
       <isNotNull prepend="AND" property="AccreditToUserId">[AccreditToUserId]='$AccreditToUserId$'</isNotNull>
       <isNotNull prepend="AND" property="AccreditDateTime">[AccreditDateTime]='$AccreditDateTime$'</isNotNull>
       <isNotNull prepend="AND" property="AccreditStatus">[AccreditStatus]='$AccreditStatus$'</isNotNull>
       <isNotNull prepend="AND" property="AcWorkflowId">[AcWorkflowId]='$AcWorkflowId$'</isNotNull>
       <isNotNull prepend="AND" property="AcWorktaskId">[AcWorktaskId]='$AcWorktaskId$'</isNotNull>
     </dynamic>

   </select>
   
   <select id="GetPS_AccreditUserRowCount" parameterClass="string">
    select count(*) from PS_AccreditUser $value$
   </select>
  </statements>
</sqlMap>
 