<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="mModule" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="mModule"  type="Ebada.Scgl.Model.mModule,Ebada.Scgl.Model" />
  </alias>
  <resultMaps>
    <resultMap id="mModule_AllColumns" class="mModule">
      <result property="ModuName" column="ModuName" />
      <result property="ModuTypes" column="ModuTypes" />
      <result property="AssemblyFileName" column="AssemblyFileName" />
      <result property="Sequence" column="Sequence" />
      <result property="MethodName" column="MethodName" />
      <result property="MethodParam" column="MethodParam" />
      <result property="IconName" column="IconName" />
      <result property="visiableFlag" column="visiableFlag" />
      <result property="ActivityFlag" column="ActivityFlag" />
      <result property="IsCores" column="IsCores" />
      <result property="Description" column="Description" />
      <result property="Modu_ID" column="Modu_ID" />
      <result property="ParentID" column="ParentID" />
      <result property="Rights" column="Rights" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="SelectmModuleList" resultMap="mModule_AllColumns" parameterClass="string">
      SELECT
      [ModuName],
      [ModuTypes],
      [AssemblyFileName],
      [Sequence],
      [MethodName],
      [MethodParam],
      [IconName],
      [visiableFlag],
      [ActivityFlag],
      [IsCores],
      [Description],
      [Modu_ID],
      [ParentID],
      [Rights]
      FROM mModule
      $value$
    </select>

    <select id="SelectmModuleByHash" parameterClass="Hashtable">
      SELECT
      [ModuName],
      [ModuTypes],
      [AssemblyFileName],
      [Sequence],
      [MethodName],
      [MethodParam],
      [IconName],
      [visiableFlag],
      [ActivityFlag],
      [IsCores],
      [Description],
      [Modu_ID],
      [ParentID],
      [Rights]
      FROM mModule
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="ModuName">[ModuName]='$ModuName$'</isNotNull>
        <isNotNull prepend="AND" property="ModuTypes">[ModuTypes]='$ModuTypes$'</isNotNull>
        <isNotNull prepend="AND" property="AssemblyFileName">[AssemblyFileName]='$AssemblyFileName$'</isNotNull>
        <isNotNull prepend="AND" property="Sequence">[Sequence]='$Sequence$'</isNotNull>
        <isNotNull prepend="AND" property="MethodName">[MethodName]='$MethodName$'</isNotNull>
        <isNotNull prepend="AND" property="MethodParam">[MethodParam]='$MethodParam$'</isNotNull>
        <isNotNull prepend="AND" property="IconName">[IconName]='$IconName$'</isNotNull>
        <isNotNull prepend="AND" property="visiableFlag">[visiableFlag]='$visiableFlag$'</isNotNull>
        <isNotNull prepend="AND" property="ActivityFlag">[ActivityFlag]='$ActivityFlag$'</isNotNull>
        <isNotNull prepend="AND" property="IsCores">[IsCores]='$IsCores$'</isNotNull>
        <isNotNull prepend="AND" property="Description">[Description]='$Description$'</isNotNull>
        <isNotNull prepend="AND" property="Modu_ID">[Modu_ID]='$Modu_ID$'</isNotNull>
        <isNotNull prepend="AND" property="ParentID">[ParentID]='$ParentID$'</isNotNull>
        <isNotNull prepend="AND" property="Rights">[Rights]='$Rights$'</isNotNull>
      </dynamic>
    </select>
    <select id="SelectmModuleByKey" resultMap="mModule_AllColumns" parameterClass="mModule">
      SELECT
      [ModuName],
      [ModuTypes],
      [AssemblyFileName],
      [Sequence],
      [MethodName],
      [MethodParam],
      [IconName],
      [visiableFlag],
      [ActivityFlag],
      [IsCores],
      [Description],
      [Modu_ID],
      [ParentID],
      [Rights]
      FROM mModule
      WHERE
      Modu_ID = #Modu_ID#

    </select>

    <delete id="DeletemModule" parameterClass="mModule">
      DELETE FROM
      mModule
      WHERE
      Modu_ID = #Modu_ID#

    </delete>

    <delete id="DeletemModuleByWhere" parameterClass="string">
      delete from mModule $value$
    </delete>

    <delete id="DeletemModuleByKey" parameterClass="string">
      DELETE FROM
      mModule
      WHERE
      Modu_ID = #Modu_ID#

    </delete>

    <update id="UpdatemModule" parameterClass="mModule" resultClass="int">
      UPDATE mModule
      SET
      [ModuName]=#ModuName#,
      [ModuTypes]=#ModuTypes#,
      [AssemblyFileName]=#AssemblyFileName#,
      [Sequence]=#Sequence#,
      [MethodName]=#MethodName#,
      [MethodParam]=#MethodParam#,
      [IconName]=#IconName#,
      [visiableFlag]=#visiableFlag#,
      [ActivityFlag]=#ActivityFlag#,
      [IsCores]=#IsCores#,
      [Description]=#Description#,
      [ParentID]=#ParentID#,
      [Rights]=#Rights#
      WHERE
      Modu_ID = #Modu_ID#

    </update>

    <insert id="InsertmModule" parameterClass="mModule">
      INSERT INTO mModule
      (
      [ModuName],
      [ModuTypes],
      [AssemblyFileName],
      [Sequence],
      [MethodName],
      [MethodParam],
      [IconName],
      [visiableFlag],
      [ActivityFlag],
      [IsCores],
      [Description],
      [Modu_ID],
      [ParentID],
      [Rights]
      )
      VALUES
      (
      #ModuName#,
      #ModuTypes#,
      #AssemblyFileName#,
      #Sequence#,
      #MethodName#,
      #MethodParam#,
      #IconName#,
      #visiableFlag#,
      #ActivityFlag#,
      #IsCores#,
      #Description#,
      #Modu_ID#,
      #ParentID#,
      #Rights#
      )

    </insert>

    <select id="GetmModuleRowCountByHash" parameterClass="Hashtable">
      SELECT Count(*)
      FROM mModule
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="ModuName">[ModuName]='$ModuName$'</isNotNull>
        <isNotNull prepend="AND" property="ModuTypes">[ModuTypes]='$ModuTypes$'</isNotNull>
        <isNotNull prepend="AND" property="AssemblyFileName">[AssemblyFileName]='$AssemblyFileName$'</isNotNull>
        <isNotNull prepend="AND" property="Sequence">[Sequence]='$Sequence$'</isNotNull>
        <isNotNull prepend="AND" property="MethodName">[MethodName]='$MethodName$'</isNotNull>
        <isNotNull prepend="AND" property="MethodParam">[MethodParam]='$MethodParam$'</isNotNull>
        <isNotNull prepend="AND" property="IconName">[IconName]='$IconName$'</isNotNull>
        <isNotNull prepend="AND" property="visiableFlag">[visiableFlag]='$visiableFlag$'</isNotNull>
        <isNotNull prepend="AND" property="ActivityFlag">[ActivityFlag]='$ActivityFlag$'</isNotNull>
        <isNotNull prepend="AND" property="IsCores">[IsCores]='$IsCores$'</isNotNull>
        <isNotNull prepend="AND" property="Description">[Description]='$Description$'</isNotNull>
        <isNotNull prepend="AND" property="Modu_ID">[Modu_ID]='$Modu_ID$'</isNotNull>
        <isNotNull prepend="AND" property="ParentID">[ParentID]='$ParentID$'</isNotNull>
        <isNotNull prepend="AND" property="Rights">[Rights]='$Rights$'</isNotNull>
      </dynamic>

    </select>

    <select id="GetmModuleRowCount" parameterClass="string">
      select count(*) from mModule $value$
    </select>

    <update id="InsertWFmModule" parameterClass="mModule" resultClass="int">
      IF not EXISTS(select * from mModule  where Modu_ID= #Modu_ID#)
      BEGIN
      INSERT INTO mModule
      (
      [Modu_ID],
      [ModuTypes],
      [ModuName],
      [AssemblyFileName],
      [Sequence],
      [IsCores],
      [Description],
      [ParentID],
      [MethodName],
      [IconName],
      [ActivityFlag],
      [visiableFlag]
      )
      VALUES
      (
      #Modu_ID#,
      #ModuTypes#,
      #ModuName#,
      #AssemblyFileName#,
      #Sequence#,
      #IsCores#,
      #Description#,
      #ParentID#,
      #MethodName#,
      #IconName#,
      #ActivityFlag#,
      #visiableFlag#
      )
      END
    </update>
  </statements>
</sqlMap>