<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PS_WorkTaskLinkView" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
  <typeAlias alias="PS_WorkTaskLinkView"  type="Ebada.Scgl.Model.PS_WorkTaskLinkView,Ebada.Scgl.Model" />
  </alias>
  <resultMaps>
      <resultMap id="PS_WorkTaskLinkView_AllColumns" class="PS_WorkTaskLinkView">
        <result property="StartTaskId" column="StartTaskId" />
        <result property="EndTaskId" column="EndTaskId" />
        <result property="EndTaskTypeId" column="EndTaskTypeId" />
        <result property="StartTaskTypeId" column="StartTaskTypeId" />
        <result property="CommandName" column="CommandName" />
        <result property="Condition" column="Condition" />
        <result property="Description" column="Description" />
        <result property="Priority" column="Priority" />
        <result property="WorkFlowId" column="WorkFlowId" />
        <result property="WorkLinkId" column="WorkLinkId" />
        <result property="endOperRule" column="endOperRule" />
        <result property="endTaskCaption" column="endTaskCaption" />
        <result property="startTaskCaption" column="startTaskCaption" />
        <result property="startOperRule" column="startOperRule" />
        <result property="endTaskTypeAndOr" column="endTaskTypeAndOr" />
        <result property="startTaskTypeAndOr" column="startTaskTypeAndOr" />
        <result property="endtaskX" column="endtaskX" />
        <result property="endtaskY" column="endtaskY" />
        <result property="starttaskX" column="starttaskX" />
        <result property="starttaskY" column="starttaskY" />
        <result property="BreakX" column="BreakX" />
        <result property="BreakY" column="BreakY" />
        <result property="IsJumpSelf" column="IsJumpSelf" />
      </resultMap>
  </resultMaps>

  <statements>
   <select id="SelectPS_WorkTaskLinkViewList" resultMap="PS_WorkTaskLinkView_AllColumns" parameterClass="string">
        SELECT 
         [StartTaskId],
         [EndTaskId],
         [EndTaskTypeId],
         [StartTaskTypeId],
         [CommandName],
         [Condition],
         [Description],
         [Priority],
         [WorkFlowId],
         [WorkLinkId],
         [endOperRule],
         [endTaskCaption],
         [startTaskCaption],
         [startOperRule],
         [endTaskTypeAndOr],
         [startTaskTypeAndOr],
         [endtaskX],
         [endtaskY],
         [starttaskX],
         [starttaskY],
         [BreakX],
         [BreakY],
         [IsJumpSelf]
          FROM PS_WorkTaskLinkView
          $value$
   </select>
   <select id="GetPS_WorkTaskLinkViewRowCount" parameterClass="string">
    select count(*) from PS_WorkTaskLinkView $value$
   </select>
  
   <insert id="InsertPS_WorkTaskLinkView" parameterClass="PS_WorkTaskLinkView">
        INSERT INTO PS_WorkTaskLinkView
         (
         [StartTaskId],
         [EndTaskId],
         [EndTaskTypeId],
         [StartTaskTypeId],
         [CommandName],
         [Condition],
         [Description],
         [Priority],
         [WorkFlowId],
         [WorkLinkId],
         [endOperRule],
         [endTaskCaption],
         [startTaskCaption],
         [startOperRule],
         [endTaskTypeAndOr],
         [startTaskTypeAndOr],
         [endtaskX],
         [endtaskY],
         [starttaskX],
         [starttaskY],
         [BreakX],
         [BreakY],
         [IsJumpSelf]
         )
       VALUES
         (
         #StartTaskId#,
         #EndTaskId#,
         #EndTaskTypeId#,
         #StartTaskTypeId#,
         #CommandName#,
         #Condition#,
         #Description#,
         #Priority#,
         #WorkFlowId#,
         #WorkLinkId#,
         #endOperRule#,
         #endTaskCaption#,
         #startTaskCaption#,
         #startOperRule#,
         #endTaskTypeAndOr#,
         #startTaskTypeAndOr#,
         #endtaskX#,
         #endtaskY#,
         #starttaskX#,
         #starttaskY#,
         #BreakX#,
         #BreakY#,
         #IsJumpSelf#
         )

   </insert>
   <update id="UpdatePS_WorkTaskLinkView" parameterClass="PS_WorkTaskLinkView" resultClass="int">
          UPDATE PS_WorkTaskLinkView
           SET
             [StartTaskId]=#StartTaskId#,
             [EndTaskId]=#EndTaskId#,
             [EndTaskTypeId]=#EndTaskTypeId#,
             [StartTaskTypeId]=#StartTaskTypeId#,
             [CommandName]=#CommandName#,
             [Condition]=#Condition#,
             [Description]=#Description#,
             [Priority]=#Priority#,
             [WorkFlowId]=#WorkFlowId#,
             [WorkLinkId]=#WorkLinkId#,
             [endOperRule]=#endOperRule#,
             [endTaskCaption]=#endTaskCaption#,
             [startTaskCaption]=#startTaskCaption#,
             [startOperRule]=#startOperRule#,
             [endTaskTypeAndOr]=#endTaskTypeAndOr#,
             [startTaskTypeAndOr]=#startTaskTypeAndOr#,
             [endtaskX]=#endtaskX#,
             [endtaskY]=#endtaskY#,
             [starttaskX]=#starttaskX#,
             [starttaskY]=#starttaskY#,
             [BreakX]=#BreakX#,
             [BreakY]=#BreakY#,
             [IsJumpSelf]=#IsJumpSelf#
   </update>
   <delete id="DeletePS_WorkTaskLinkView" parameterClass="PS_WorkTaskLinkView">
        DELETE FROM 
         PS_WorkTaskLinkView

   </delete>
  </statements>
</sqlMap>
 